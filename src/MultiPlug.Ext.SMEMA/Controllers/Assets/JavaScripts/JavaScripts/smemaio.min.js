function DrawEnabledIcon(e, a, t) { e.html(a == t ? '<i class="fas fa-lg fa-check"></i>' : '<i class="fas fa-lg fa-times"></i>') } function DrawLeftIcon(e, a) { e.html("1" == a ? '<i class="fas fa-lg fa-arrow-left"></i>' : '<i class="fas fa-lg fa-times"></i>'), UpdateColour(e, a, "btn-smema-unblocked", "btn-smema-blocked") } function DrawRightIcon(e, a) { e.html("1" == a ? '<i class="fas fa-lg fa-arrow-right"></i>' : '<i class="fas fa-lg fa-times"></i>'), UpdateColour(e, a, "btn-smema-unblocked", "btn-smema-blocked") } function DrawLatchedIcon(e, a) { e.html("1" == a ? '<i class="fas fa-lg fa-lock"></i>' : '<i class="fas fa-lg fa-lock-open"></i>') } function DrawRightDivertedIcon(e, a, t) { e.html('<i class="fas fa-lg fa-arrow-right divert-rotate-' + ("0" == a ? 0 : t ? 315 : 45) + '"></i>'), UpdateColour(e, a, "btn-smema-diverted", "btn-smema-unblocked") } function DrawLeftDivertedIcon(e, a, t) { e.html('<i class="fas fa-lg fa-arrow-left divert-rotate-' + ("0" == a ? 0 : t ? 45 : 315) + '"></i>'), UpdateColour(e, a, "btn-smema-diverted", "btn-smema-unblocked") } function UpdateColour(e, a, t, n) { "0" == a ? (e.removeClass(t), e.addClass(n)) : (e.removeClass(n), e.addClass(t)) } function UpdateApiHref(e, a) { var t = e.attr("data-api-href"); "1" == a ? e.attr("data-api-href", t.replace("true", "false")) : e.attr("data-api-href", t.replace("false", "true")) } function Initialise(e, a, t, n, o, c, l, r, i, d, s, u, f, S, h, b, p, m, w, D, M, I, j, A, V, E) { g_APIPath = e, $(".btn-shutdown").click(function (a) { a.preventDefault(), $.ajax({ type: "POST", url: e + "power/shutdown/", success: function () { $("#Shutdown-modal").modal("hide") } }), $("#Shutdown-modal").modal("hide") }), $(".btn-restart").click(function (a) { a.preventDefault(), $.ajax({ type: "POST", url: e + "power/restart/", success: function () { $("#Shutdown-modal").modal("hide") } }), $("#Shutdown-modal").modal("hide") }), $(".btn-apicall").click(function (e) { e.preventDefault(), $.post($(this).attr("data-api-href"), function (e) { }).done(function () { }) }), h && DrawLatchedIcon($("#SMEMAUplineGoodBoardState"), "1", "1"), b && DrawLatchedIcon($("#SMEMAUplineBadBoardState"), "1", "1"), p && DrawLatchedIcon($("#SMEMAUplineFlipBoardState"), "1", "1"), m && DrawLatchedIcon($("#SMEMADownlineMachineReadyState"), "1", "1"), window.addEventListener("multiplugReady", function (e) { $.connection.wS.on("Send", function (e, a) { if (e == t && DrawEnabledIcon($("#SMEMAUplineMachineReadyState"), a.Subjects[0].Value, w), e == n) { if (h) return; DrawEnabledIcon($("#SMEMAUplineGoodBoardState"), a.Subjects[0].Value, D) } if (e == o) { if (b) return; DrawEnabledIcon($("#SMEMAUplineBadBoardState"), a.Subjects[0].Value, M) } if (e == c) { if (p) return; DrawEnabledIcon($("#SMEMAUplineFlipBoardState"), a.Subjects[0].Value, I) } if (e == l) { var g = $("#SMEMAInterlockMachineReadyState"); g.hasClass("smema-righttoleft") ? DrawRightIcon(g, a.Subjects[0].Value) : DrawLeftIcon(g, a.Subjects[0].Value), UpdateApiHref(g, a.Subjects[0].Value), DrawLatchedIcon(g = $("#SMEMAInterlockMachineReadyLatchState"), a.Subjects[2].Value), UpdateApiHref(g, a.Subjects[2].Value) } if (e == r) { var g = $("#SMEMAInterlockGoodBoardState"); g.hasClass("smema-righttoleft") ? DrawLeftIcon(g, a.Subjects[0].Value) : DrawRightIcon(g, a.Subjects[0].Value), UpdateApiHref(g, a.Subjects[0].Value), DrawLatchedIcon(g = $("#SMEMAInterlockGoodBoardLatchState"), a.Subjects[2].Value), UpdateApiHref(g, a.Subjects[2].Value), (g = $("#SMEMAInterlockGoodBoardDivertState")).hasClass("smema-righttoleft") ? DrawLeftDivertedIcon(g, a.Subjects[3].Value, !1) : DrawRightDivertedIcon(g, a.Subjects[3].Value, !1), UpdateApiHref(g, a.Subjects[3].Value), DrawLatchedIcon(g = $("#SMEMAInterlockGoodBoardDivertLatchState"), a.Subjects[4].Value), UpdateApiHref(g, a.Subjects[4].Value) } if (e == i) { var g = $("#SMEMAInterlockBadBoardState"); g.hasClass("smema-righttoleft") ? DrawLeftIcon(g, a.Subjects[0].Value) : DrawRightIcon(g, a.Subjects[0].Value), UpdateApiHref(g, a.Subjects[0].Value), DrawLatchedIcon(g = $("#SMEMAInterlockBadBoardLatchState"), a.Subjects[2].Value), UpdateApiHref(g, a.Subjects[2].Value), (g = $("#SMEMAInterlockBadBoardDivertState")).hasClass("smema-righttoleft") ? DrawLeftDivertedIcon(g, a.Subjects[3].Value, !0) : DrawRightDivertedIcon(g, a.Subjects[3].Value, !0), UpdateApiHref(g, a.Subjects[3].Value), DrawLatchedIcon(g = $("#SMEMAInterlockBadBoardDivertLatchState"), a.Subjects[4].Value), UpdateApiHref(g, a.Subjects[4].Value) } if (e == d) { var g = $("#SMEMAInterlockFlipBoardState"); g.hasClass("smema-righttoleft") ? DrawLeftIcon(g, a.Subjects[0].Value) : DrawRightIcon(g, a.Subjects[0].Value), UpdateApiHref(g, a.Subjects[0].Value), DrawLatchedIcon(g = $("#SMEMAInterlockFlipBoardLatchState"), a.Subjects[2].Value), UpdateApiHref(g, a.Subjects[2].Value) } if (e == s) { if (m) return; DrawEnabledIcon($("#SMEMADownlineMachineReadyState"), a.Subjects[0].Value, j) } e == u && DrawEnabledIcon($("#SMEMADownlineGoodBoardState"), a.Subjects[0].Value, A), e == f && DrawEnabledIcon($("#SMEMADownlineBadBoardState"), a.Subjects[0].Value, V), e == S && DrawEnabledIcon($("#SMEMADownlineFlipBoardState"), a.Subjects[0].Value, E) }) }) } window.addEventListener("multiplugReconnecting", function (e) { $("#Connection-modal").modal("show"), $("#Connection-modalTitle").text("Connection Disconnected"), $("#Connection-modalDescription").text("The connection to the SMEMA interlock device has been lost. Attempts are being made to restore the connection.") }), window.addEventListener("multiplugReconnected", function (e) { $("#Connection-modalTitle").text("Connection Restored"), $("#Connection-modalDescription").text("The connection has now been restored, awaiting commands from the Server.") });